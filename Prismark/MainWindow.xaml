<Window x:Class="Prismark.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Prismark"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="CanResizeWithGrip"
        Title="Prismark Doc" Height="768" Width="1280" MinWidth="1280" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1FFFFFFF"/>
                    <!-- 半透明の白色 -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3FFFFFFF"/>
                    <!-- より濃い半透明の白色 -->
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                    <!-- 赤色 -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#8E0A16"/>
                    <!-- より暗い赤色 -->
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DarkMenuItem" TargetType="MenuItem">
            <Setter Property="Background" Value="#232323"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter 
                                    Content="{TemplateBinding Header}"
                                    ContentSource="Header"
                                    Margin="6,3,6,3"/>
                                <Popup 
                                    x:Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                                    AllowsTransparency="True" 
                                    Focusable="False"
                                    PopupAnimation="Fade">
                                    <Border 
                                        x:Name="SubmenuBorder"
                                        Background="#232323"
                                        BorderBrush="#3F3F46"
                                        BorderThickness="1">
                                        <StackPanel 
                                            IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#3E3E42"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#656565"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="#232323"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="MinWidth" Value="150px"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                    <ColumnDefinition Width="13"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                                <ContentPresenter 
                                    Grid.Column="1"
                                    ContentSource="Header"
                                    Margin="0,6,0,6"
                                    VerticalAlignment="Center"/>
                                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right"/>
                                <Path x:Name="ArrowPath" Grid.Column="3" Fill="#FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M0,0 L0,8 L4,4 Z" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Popup 
                                    x:Name="Popup"
                                    Placement="Right"
                                    HorizontalOffset="-4"
                                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                                    AllowsTransparency="True" 
                                    Focusable="False"
                                    PopupAnimation="Fade">
                                    <Border 
                                        x:Name="SubmenuBorder"
                                        Background="#232323"
                                        BorderBrush="#3F3F46"
                                        BorderThickness="1">
                                        <StackPanel 
                                            IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Cycle">
                                            <StackPanel.Resources>
                                                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}"/>
                                            </StackPanel.Resources>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#3E3E42"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#656565"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="ArrowPath" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSubmenuOpen" Value="true">
                                <Setter TargetName="ArrowPath" Property="Fill"  Value="#FF6493"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Menu">
            <Setter Property="Background" Value="#232323"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
        </Style>

        <Style x:Key="DarkMenuSeparator" TargetType="Separator">
            <Setter Property="Background" Value="#656565"/>
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border BorderBrush="{TemplateBinding Background}" 
                                BorderThickness="1" 
                                Margin="{TemplateBinding Margin}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>
        <Style x:Key="HeaderButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#EEE"/>
            <Setter Property="Width" Value="250px"/>
            <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=ActualHeight}"/>
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                            <Border BorderThickness="0,0,1,0" 
                                BorderBrush="#111" 
                                Background="{TemplateBinding Background}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl x:Name="Icon" 
                                        Content="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="20" 
                                        Height="20" 
                                        Margin="20,0,8,0"/>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </StackPanel>

                            </Border>
                            <Rectangle x:Name="UnderlineRect" 
                                       Height="2" 
                                       Margin="0px 0px 1px 0px"
                                       Fill="Transparent" 
                                       VerticalAlignment="Bottom"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0CD0E0FF"/>
                    <!-- 半透明の白色 -->
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3FFFFFFF"/>
                    <!-- より濃い半透明の白色 -->
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid Background="{TemplateBinding Background}" Margin="-1,-1,-2,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- カスタムタイトルバー -->
                    <Grid Grid.Row="0" Background="#FF1E1E1E">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- アイコンとタイトル -->
                        <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5,0,0,0">
                            <Image Source="app.ico" Width="20" Height="20" Margin="0,0,5,0"/>
                            <TextBlock Text="{TemplateBinding Title}" VerticalAlignment="Center" Foreground="White"/>
                        </StackPanel>

                        <!-- ドラッグ可能な領域 -->
                        <Grid Grid.Column="1" Background="Transparent"/>

                        <!-- コントロールボタン -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="🗕" Click="MinimizeButton_Click" BorderThickness="0" Foreground="White"
                                    WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TitleBarButtonStyle}"/>
                            <Button Content="🗖" Click="MaximizeRestoreButton_Click" BorderThickness="0" Foreground="White"
                                    WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource TitleBarButtonStyle}"/>
                            <Button Content="🗙" Click="CloseButton_Click"  BorderThickness="0" Foreground="White"
                                    WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource CloseButtonStyle}"/>
                        </StackPanel>
                    </Grid>

                    <!-- メインコンテンツ -->
                    <ContentPresenter Grid.Row="1"/>
                </Grid>
            </Border>
        </ControlTemplate>
    </Window.Template>
    <Grid Background="#FF202226" Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="ファイル"  Style="{StaticResource DarkMenuItem}">
                <MenuItem Header="新規作成" Click="NewProject"/>
                <MenuItem Header="開く" Click="OpenProject"/>
                <MenuItem Header="保存"/>
                <Separator Style="{StaticResource DarkMenuSeparator}"/>
                <MenuItem Header="エクスポート">
                    <MenuItem Header="HTML"/>
                    <MenuItem Header="Word"/>
                </MenuItem>
                <Separator Style="{StaticResource DarkMenuSeparator}"/>
                <MenuItem Header="終了"/>
            </MenuItem>
            <MenuItem Header="編集" Style="{StaticResource DarkMenuItem}">
                <MenuItem Header="元に戻す"/>
                <MenuItem Header="やり直し"/>
                <Separator Style="{StaticResource DarkMenuSeparator}"/>
                <MenuItem Header="切り取り"/>
                <MenuItem Header="コピー"/>
                <MenuItem Header="貼り付け"/>
            </MenuItem>
            <MenuItem Header="表示" Style="{StaticResource DarkMenuItem}">
                <MenuItem Header="プレビュー表示切替"/>
            </MenuItem>
            <MenuItem Header="ツール" Style="{StaticResource DarkMenuItem}">
                <MenuItem Header="設定"/>
            </MenuItem>
        </Menu>
        <!-- 境界線 -->
        <Rectangle Grid.Row="1" Fill="#111"/>
        <!-- ナビゲーションメニュー -->
        <StackPanel Grid.Row="2" Orientation="Horizontal"  Height="50" VerticalAlignment="Top">
            <Button Content="Editor"
                    x:Name="btnNavigateToEditor"
                    Click="NavigateButton_Click" 
                    Tag="{StaticResource EditIcon}"
                    WindowChrome.IsHitTestVisibleInChrome="True" 
                    Style="{StaticResource HeaderButtonStyle}"/>
            <Button Content="Export" 
                    x:Name="btnNavigateToExport"
                    Click="NavigateButton_Click" 
                    Tag="{StaticResource PublishIcon}"
                    WindowChrome.IsHitTestVisibleInChrome="True" 
                    Style="{StaticResource HeaderButtonStyle}"/>
            <Button Content="Setting"
                    x:Name="btnNavigateToSetting"
                    Click="NavigateButton_Click" 
                    Visibility="Collapsed"
                    Tag="{StaticResource SettingIcon}"
                    WindowChrome.IsHitTestVisibleInChrome="True" 
                    Style="{StaticResource HeaderButtonStyle}"/>
        </StackPanel>
        <!-- 境界線 -->
        <Rectangle Grid.Row="3" Fill="#111"/>
        <!-- コンテンツを表示するためのFrame -->
        <Frame Grid.Row="4" x:Name="MainFrame" NavigationUIVisibility="Hidden" Navigated="MainFrame_Navigated"/>
    </Grid>
</Window>